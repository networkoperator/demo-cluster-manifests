apiVersion: netop.mgr/v1alpha1
kind: ClusterInfo
metadata:
  creationTimestamp: "2023-07-13T22:55:48Z"
  finalizers:
  - netop.mgr/finalizer
  generation: 1
  managedFields:
  - apiVersion: netop.mgr/v1alpha1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:finalizers:
          .: {}
          v:"netop.mgr/finalizer": {}
    manager: ansible-operator
    operation: Update
    time: "2023-07-13T22:55:48Z"
  - apiVersion: netop.mgr/v1alpha1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:ownerReferences:
          .: {}
          k:{"uid":"525b0d18-c2f6-42f4-955e-ba7614c0432e"}: {}
      f:spec:
        .: {}
        f:config_overrides:
          .: {}
          f:aci_cni_config:
            .: {}
            f:aci_config:
              .: {}
              f:aep: {}
              f:vmm_domain:
                .: {}
                f:encap_type: {}
                f:mcast_range:
                  .: {}
                  f:end: {}
                  f:start: {}
                f:nested_inside:
                  .: {}
                  f:installer_provisioned_lb_ip: {}
                  f:name: {}
                  f:type: {}
            f:kube_config:
              .: {}
              f:drop_log_config: {}
              f:image_pull_policy: {}
              f:istio_config: {}
              f:multus: {}
              f:nodepodif_config: {}
              f:operator_managed_config: {}
              f:ovs_memory_limit: {}
              f:sriov_config: {}
            f:logging:
              .: {}
              f:controller_log_level: {}
              f:hostagent_log_level: {}
              f:opflexagent_log_level: {}
            f:net_config:
              .: {}
              f:extern_static: {}
              f:node_svc_subnet: {}
              f:service_vlan: {}
            f:registry: {}
          f:aci_config:
            .: {}
            f:cluster_l3out:
              .: {}
              f:bgp:
                .: {}
                f:peering: {}
              f:svi: {}
              f:vrf: {}
            f:l3out:
              .: {}
              f:external_networks: {}
              f:name: {}
            f:physical_domain: {}
            f:system_id: {}
            f:vrf:
              .: {}
              f:name: {}
              f:tenant: {}
          f:calico_cni_config: {}
          f:cko_proxy_config: {}
          f:cluster_profile_name: {}
          f:cni: {}
          f:connectivity_checker:
            .: {}
            f:reachability_test_enable:
              .: {}
              f:external_url: {}
              f:periodic_sync: {}
          f:context:
            .: {}
            f:aep: {}
            f:l3out:
              .: {}
              f:external_networks: {}
              f:name: {}
            f:vrf:
              .: {}
              f:name: {}
              f:tenant: {}
          f:distro:
            .: {}
            f:flavor: {}
            f:platform: {}
            f:type: {}
          f:fabricinfra:
            .: {}
            f:name: {}
            f:type: {}
          f:gitops:
            .: {}
            f:base64_encoded_argo_manifests: {}
          f:lb_config: {}
          f:monitoring_config: {}
          f:net_config:
            .: {}
            f:cluster_svc_subnet: {}
            f:extern_dynamic: {}
            f:kubeapi_vlan: {}
            f:node_subnet: {}
            f:pod_subnet: {}
          f:operator_config:
            .: {}
            f:mode: {}
            f:target_version: {}
          f:profile: {}
          f:registry: {}
          f:service_mesh_config: {}
          f:topology: {}
    manager: manager
    operation: Update
    time: "2023-07-13T22:55:48Z"
  name: ocp410bf
  namespace: netop-manager
  ownerReferences:
  - apiVersion: netop.mgr/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: ClusterProfile
    name: auto-ocp410bf
    uid: 525b0d18-c2f6-42f4-955e-ba7614c0432e
  resourceVersion: "604915"
  uid: 4269bf9e-d966-477c-9331-faed73fec210
spec:
  config_overrides:
    aci_cni_config:
      aci_config:
        aep: fab20-esx
        vmm_domain:
          encap_type: vxlan
          mcast_range:
            end: 225.10.255.255
            start: 225.10.1.1
          nested_inside:
            installer_provisioned_lb_ip: 192.168.1.2
            name: HX_vC
            type: vmware
      kube_config:
        drop_log_config: {}
        image_pull_policy: Always
        istio_config: {}
        multus: {}
        nodepodif_config: {}
        operator_managed_config: {}
        ovs_memory_limit: 1Gi
        sriov_config: {}
      logging:
        controller_log_level: debug
        hostagent_log_level: debug
        opflexagent_log_level: debug
      net_config:
        extern_static: 10.4.0.1/24
        node_svc_subnet: 10.5.0.1/24
        service_vlan: 201
      registry: {}
    aci_config:
      cluster_l3out:
        bgp:
          peering: {}
        svi: {}
        vrf: {}
      l3out:
        external_networks:
        - ocp-bf-l3-extepg
        name: ocp410_bf_l3out
      physical_domain: {}
      system_id: ocp410bf
      vrf:
        name: ocp410_bf_vrf
        tenant: common
    calico_cni_config: {}
    cko_proxy_config: {}
    cluster_profile_name: auto-ocp410bf
    cni: aci
    connectivity_checker:
      reachability_test_enable:
        external_url: {}
        periodic_sync: {}
    context:
      aep: fab20-esx
      l3out:
        external_networks:
        - ocp-bf-l3-extepg
        name: ocp410_bf_l3out
      vrf:
        name: ocp410_bf_vrf
        tenant: common
    distro:
      flavor: openshift-4.10-esx
      platform: baremetal
      type: kubernetes
    fabricinfra:
      name: ocp410bf
      type: aci
    gitops:
      base64_encoded_argo_manifests: ""
    lb_config: {}
    monitoring_config: {}
    net_config:
      cluster_svc_subnet: 10.96.0.0/12
      extern_dynamic: 10.3.0.1/24
      kubeapi_vlan: 200
      node_subnet: 192.168.1.1/24
      pod_subnet: 10.2.0.1/16
    operator_config:
      mode: unmanaged
      target_version: 0.9.1
    profile: {}
    registry: {}
    service_mesh_config: {}
    topology: {}
status:
  status: false
